create type if not exists USER_ROLE as enum('ADMIN', 'PRACT', 'USER');
create type if not exists DAYSTAGE as enum( 'WAKEUP', 'MORNING','MIDDAY','AFTERNOON','EVENING','NIGHT','BEDTIME');

create table if not exists USERMODEL (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username varchar(255) NOT NULL,
    password varchar(255) NOT NULL,
    role USER_ROLE NOT NULL
);

create table if not exists DAILYEVALUATION (
    record_Date date NOT NULL,
    userModel_id BIGINT NOT NULL,
    foreign key (userModel_id) references userModel(id),
    primary key (record_Date, userModel_id)
);

create table if not exists PRACTITIONERROLEREQUEST (
    approved bit NOT NULL,
    userModel_id BIGINT NOT NULL,
    constraint PK_PRACTITIONERROLEREQUEST primary key (userModel_id),
    foreign key (userModel_id) references userModel(id)
);

create table if not exists MEDICATION (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL
);
create table if not exists PRESCRIPTION (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    medication_id BIGINT NOT NULL,
    foreign key (medication_id) references medication(id),
    dose_mg int NOT NULL,
    patient_id BIGINT NOT NULL,
    foreign key (patient_id) references userModel(id),
    practitioner_id BIGINT NOT NULL,
    foreign key (practitioner_id) references userModel(id),
    begin_time timestamp NOT NULL,
    end_time timestamp
);


create table if not exists PRESCRIPTIONSCHEDULEENTRY (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    day_stage DAYSTAGE NOT NULL,
    prescription_id BIGINT NOT NULL,
    foreign key (prescription_id) references prescription(id)
);

create table if not exists DOSE (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dose_time timestamp NOT NULL,
    taken bit NOT NULL,
    dailyevaluation_record_Date date NOT NULL,
    dailyevaluation_userModel_id BIGINT NOT NULL,
    foreign key (dailyevaluation_record_Date, dailyevaluation_userModel_id) references dailyevaluation(record_Date,userModel_id),
    PRESCRIPTION_SCHEDULE_ENTRY_ID BIGINT NOT NULL,
    foreign key (PRESCRIPTION_SCHEDULE_ENTRY_ID) references prescriptionscheduleentry(id)
);

create table if not exists BLOODPRESSUREREADING (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    systole int NOT NULL,
    diastole int NOT NULL,
    heart_rate int NOT NULL,
    reading_time timestamp NOT NULL,
    dailyevaluation_record_Date date NOT NULL,
    dailyevaluation_userModel_id BIGINT NOT NULL,
    foreign key (dailyevaluation_record_Date, dailyevaluation_userModel_id) references dailyevaluation(record_Date,userModel_id),
    day_stage DAYSTAGE NOT NULL
);